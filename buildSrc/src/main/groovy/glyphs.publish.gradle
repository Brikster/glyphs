plugins {
    id 'maven-publish'
    id 'signing'
}

java {
    withSourcesJar()
    withJavadocJar()
}

javadoc {
    options.encoding = "UTF-8"
    options.addStringOption('Xdoclint:none', '-quiet')
    // Java 9 and higher
    options.addBooleanOption('html5', true)
}

publishing {
    repositories {
        maven {
            if (version.toString().endsWith("-SNAPSHOT")) {
                url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            } else {
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            }
            credentials {
                username = rootProject.hasProperty("ossrhUsername")
                        ? findProperty("ossrhUsername")
                        : System.getenv("OSSRH_USERNAME")
                password = rootProject.hasProperty("ossrhPassword")
                        ? findProperty("ossrhPassword")
                        : System.getenv("OSSRH_PASSWORD")
            }
        }
    }

    publications {
        maven(MavenPublication) {
            from components.java
            artifactId = "$mavenArtifactId"
            pom {
                name = "glyphs"
                description = "Library for convenient management of bitmap textures from Minecraft resourcepacks."
                url = "https://github.com/Brikster/glyphs"
                licenses {
                    license {
                        name = "GPL-v3.0"
                        url = "https://www.gnu.org/licenses/gpl-3.0.txt"
                    }
                }
                developers {
                    developer {
                        id = 'Brikster'
                        name = 'Ilya Andreev'
                        email = 'mrbrikster@yandex.ru'
                    }
                }
                scm {
                    url = 'https://github.com/Brikster/glyphs'
                    connection = 'scm:git:git://github.com/Brikster/glyphs.git'
                    developerConnection = 'scm:git:git@github.com:Brikster/glyphs.git'
                }
            }
        }
    }
}

signing {
    if (!rootProject.hasProperty("signing.secretKeyRingFile")) {
        def key = System.getenv("SIGNING_SECRET_KEY")
        def password = System.getenv("SIGNING_PASSWORD")
        useInMemoryPgpKeys(key, password)
    }
    sign publishing.publications.maven
}
